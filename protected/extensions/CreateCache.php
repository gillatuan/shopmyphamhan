<?phpclass CreateCache{    static public function criteriaModel($alias, $tag, $orderBy, $limit, $title, $priority)    {        $criteria = new CDbCriteria();        $criteria->compare('t.status', APPROVED);        if (is_array($limit) && $limit) {            $criteria->limit = $limit['end'];            $criteria->offset = $limit['begin'];        } elseif (intval($limit))            $criteria->limit = $limit;        if ($alias)            $criteria->compare('alias', $alias);        if ($tag)            $criteria->addSearchCondition('tags', $tag);        if ($title)            $criteria->addSearchCondition('title', $title);        if ($priority)            $criteria->compare('priority', $priority);        $criteria->order = $orderBy;        return $criteria;    }    static public function usingCache($model, $pagingAjax = true, $alias = '', $tag = '', $orderBy = 'id DESC', $duration = Cache_Time, $limit='', $searchTitle = '', $page = 1, $priority=false, $type = Type_Post)    {        $limitTrue = is_array($limit) ? 'true' : (is_int($limit) ? 'int-' . $limit : 'false-' . $limit);        $stripTitle = $searchTitle ? preg_replace('/\s+/', '', $searchTitle) : '';        $popularString = $priority ? 'true' : 'false';        $cache = 'cached_all_' . $model . '_limit-' . $limitTrue . 'tag-' . Helper::unicode_convert($tag) . '_alias-' . $alias . '_page-' . $page . '_popular-' . $popularString . '_title-' . $stripTitle;        $paramsForCache = array(            'name'        => $cache,            'duration'    => $duration,            'description' => 'Cache for ' . $model . ' with time=' . $duration        );        if (!$pagingAjax) {            $limitRecord = $limit;            $cacheFile = Yii::app()->cache->get($cache);            if (!$cacheFile) {                $condition = self::criteriaModel($alias, $tag, $orderBy, $limitRecord, $searchTitle, $priority);                if ($model == 'Tags') {                    $condition->compare('type', $type);                }                $cacheFile = $alias ? $model::model()->find($condition) : $model::model()->findAll($condition);                Yii::app()->cache->set($cache, $cacheFile, $duration);            }        } else {            $limitRecord = 'no';            $gh = $limit ? $limit : 10;            $dependence = self::getCacheDependency($paramsForCache);            if ($dependence) {                $cacheFile = new CActiveDataProvider($model::model()->cache($duration, $dependence, 2), array(                    'criteria'   => self::criteriaModel($alias, $tag, $orderBy, $limitRecord, $searchTitle, $priority, $type),                    'pagination' => array(                        'pageSize' => $gh,                    )                ));            }        }        return $cacheFile;    }    static public function create($params)    {        $name = $params['name'];        $description = $params['description'];        $duration = $params['duration'];        if (empty($name))            return;        if (!Cache::model()->countByAttributes(array('name' => $name))) {            $model = new Cache;            $model->name = $name;            $model->description = $description;            $model->expired = time();            $model->duration = $duration;            if (!$model->save()) {                return;            }        }        return true;    }    static public function getCacheDependency($params)    {        $name = $params['name'];        if (empty($name))            return;        self::create($params);        $sql = "SELECT expired FROM cache WHERE name='" . $name . "'";        $dependency = new CDbCacheDependency($sql);        return $dependency;    }}